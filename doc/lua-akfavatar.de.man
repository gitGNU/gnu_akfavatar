.\" Process this file with
.\" groff -man -Tutf8 lua-akfavatar.1
.\"
.TH "lua-akfavatar" 1 2011-12-27 AKFAvatar
.
.SH NAME
lua-akfavatar \- Lua interpreter für die AKFAvatar-Benutzeroberfläche
.
.SH SYNTAX
.BI "local " avt " = lua-akfavatar [" Optionen "] [" " Skript " "[" Argumente "] ]"
.
.SH BESCHREIBUNG
Das Programm Lua-AKFAvatar ist der Lua Interpreter für die 
AKFAvatar-Benutzeroberfläche.
Es lädt und führt Lua-Skripte in Form von Quellcode aus
(kein Bytecode).
Es können entweder Lua-Skripte geladen werden oder ".avt"-Demo-Dateien.
Wenn kein
.I Skript
angegeben ist, wird ein Dateiauswahl-Dialog angezeigt.
Der Dateiauswahl-Dialog fängt entweder im aktuellen Arbeitsverzeichnis an,
oder in dem Verzeichnis, das mit der Option
.I --dir=Verzeichnis
angegeben wurde.
.PP
Die angegebenen
.I Argumente
sind im
.I Skript
als Strings in der globalen Tabelle namens
.B arg
verfügbar.
Der Name des
.IR Skript es
selber befindet sich in
.BR arg[0] ,
das erste Argument ist
.B arg[1]
und so weiter.
.PP
Um Zugang zu den AKFAvatar-spezifischen Funktionen zu bekommen,
muss man erstmal den Befehl
.BI "local " avt " = require """ lua-akfavatar """"
verwenden.
.PP
Mit dem Dateiauswahl-Dialog kann man auch Anleitungen
mit der Dateiendung
.RI """" .about """"
sehen.
Das können einfache Textdateien sein, die in UTF-8 oder reinem ASCII
kodiert sind.
Man kann auch die "overstrike"-Technik verwenden, um Text fett oder
unterstrichen darstellen zu können.
Man kann zum Beispiel das Textsatzsystem "groff" verwenden, um solche
Dateien zu erstellen.
.
.SH OPTIONEN
.IP "-h | --help"
zeigt eine kurze Hilfe an
.IP "-v | --version"
zeigt die Version an
.TP
.RI "-l " Name
ruft
.BI require(' name ')
auf, bevor das Skript ausgeführt wird.
Das wird üblicherweise verwendet, um Bibliotheken zu laden.
.TP
.RI --dir= Verzeichnis
fange in dem Verzeichnis an
.
.SH UMGEBUNG
.TP
LUA_PATH_5_2
.TQ
LUA_PATH
Suchpfad für Lua-Module.
Die Suchmuster werden durch Semikola getrennt.
Ein Fragezeichen
.RB ( ? )
wird durch den Namen des Modules ersetzt.
Ein Punkt im Modul-Namen wird durch das Verzeichnis-Trennzeichen
des Systems ersetzt.
Zwei Semikola
.RB ( ;; )
fügen den Standard-Pfad hinzu.
.TP
LUA_CPATH_5_2
.TQ
LUA_CPATH
Suchpfad für C-Module.
Die Syntax ist die selbe, wie bei
.IR LUA_PATH .
.TP
AVTDATAPATH
Suchpfad für Datendateien (Bilder, Audio, Texte...).
Er wird in der Variable
.I avt.datapath
abgelegt und kann mit der Funktion
.I avt.search(Dateiname)
verwendet werden.
Die Verzeichnisse werden durch Semikola getrennt.
Im Gegensatz zu den vorherigen Pfaden gibt es keine Suchmuster
mit Fragezeichen.
.
.SH BEISPIEL
.nf
local avt = require "lua-akfavatar"
avt.encoding("UTF-8")
avt.set_title("Mein erstes Programm")
avt.start()
avt.say("Hallo du!\\n")
local Benutzer = avt.ask("Wie heißt du denn? ")
avt.say("Hallo, ", Benutzer, ". Schön dich zu sehen!\\n")
avt.wait_button()
.fi
.
.SH AUTOREN
.IP "AKFAvatar, Lua-AKFAvatar"
Andreas K. Förster
.IP "Lua"
R. Ierusalimschy, L. H. de Figueiredo, and W. Celes
.
.SH HOMEPAGE
http://akfavatar.nongnu.org/
.
.SH "SIEHE AUCH"
.BR lua (1)
.BR lua-akfavatar-ref (3)
.PP
http://akfavatar.nongnu.org/manual/
.br
http://www.lua.org/manual/5.2/
.br
http://lua.coders-online.net/
