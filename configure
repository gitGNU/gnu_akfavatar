#!/bin/sh
# configure script for AKFAvatar - library and program for using an avatar
# Copyright (C) 2007 Andreas K. Foerster
# Copyright (C) 2003, 2004, 2005, 2006, 2007 Antonio Diaz Diaz.
#
# This configure script is free software; you have unlimited permission
# to copy, distribute and modify it.
#
# Date of this version: $Date: 2008-03-24 07:05:13 $


# Version and name
VERSION=0
SUBVERSION=15
REVISION=0
VARIANT="-cvs"
LIBNAME=libakfavatar.so.${VERSION}.${SUBVERSION}.${REVISION}
SONAME=libakfavatar.so.${VERSION}.${SUBVERSION}

invocation_name=$0
args=$*
no_create=
pkgname=akfavatar
pkgversion=${VERSION}.${SUBVERSION}.${REVISION}${VARIANT}
srctrigger=akfavatar.h
SIZE=DEFAULT
OLDSDL=
FORCE_ICONV=
WCHAR_ENCODING=

# clear some things potentially inherited from environment.
srcdir=
prefix=/usr/local
exec_prefix='$(prefix)'
bindir='$(exec_prefix)/bin'
libdir='$(exec_prefix)/lib'
includedir='$(exec_prefix)/include'
datadir='$(prefix)/share'
infodir='$(datadir)/info'
mandir='$(datadir)/man'
sysconfdir='$(prefix)/etc'
CC=
CXX=
CPPFLAGS=
CFLAGS='-O2 -Wall'
CXXFLAGS='-O2 -Wall'
LDFLAGS=
INSTALL='install'
AR='ar'
RANLIB='ranlib'
LDCONFIG='ldconfig'

# Loop over all args
while [ x"$1" != x ] ; do

	# Get the first arg, and shuffle
	option=$1
	shift

	# Split out the argument for options that take them
	case ${option} in
	*=*) optarg=`echo ${option} | sed -e 's,^[^=]*=,,'` ;;
	esac

	# Process the options
	case ${option} in
	--help | --he*)
		echo "Usage: configure [options]"
		echo
		echo "Options: [defaults in brackets]"
		echo "  --help               display this help and exit"
		echo "  --version             output version information and exit"
		echo "  --srcdir=DIR          find the sources in DIR [. or ..]"
		echo "  --prefix=DIR          install into DIR [${prefix}]"
		echo "  --exec-prefix=DIR     base directory for arch-dependent files [${exec_prefix}]"
		echo "  --bindir=DIR          user executables directory [${bindir}]"
		echo "  --datadir=DIR         base directory for doc and data [${datadir}]"
		echo "  --infodir=DIR         info files directory [${infodir}]"
		echo "  --mandir=DIR          man pages directory [${mandir}]"
		echo "  --sysconfdir=DIR      read-only single-machine data directory [${sysconfdir}]"
		echo "  --with-oldsdl         support for older SDL versions on target machine"
		echo "  --with-iconv[=enc]    force use of external iconv (normally not needed)"
		echo "  --with-sdl-iconv=enc  set encoding for wchar_t when SDL's iconv is used"
		echo "  --enable-qvga         compile for small QVGA (320x240) displays"
		echo "  --enable-size=qvga    compile for small QVGA (320x240) displays"
		echo "  --enable-vga          compile for VGA (640x480) displays"
		echo "  --enable-size=vga     compile for VGA (640x480) displays"
		echo "  CC=COMPILER           C compiler to use [gcc]"
		echo "  CXX=COMPILER          C++ compiler to use [g++]"
		echo "  CPPFLAGS=OPTIONS      command line options for the preprocessor [${CPPFLAGS}]"
		echo "  CFLAGS=OPTIONS        command line options for the C compiler [${CFLAGS}]"
		echo "  CXXFLAGS=OPTIONS      command line options for the C++ compiler [${CXXFLAGS}]"
		echo "  LDFLAGS=OPTIONS       command line options for the linker [${LDFLAGS}]"
		echo "  AR=program            ar program to use [${AR}]"
		echo "  RANLIB=program        ranlib program to use [${RANLIB}]"
		echo "  INSTALL=program       install program to use [${INSTALL}]"
		echo "  LDCONFIG=program      ldconfig program to use [${LDCONFIG}]"
		echo
		exit 0 ;;
	--version | --ve*)
		echo "Configure script for ${pkgname} version ${pkgversion}"
		exit 0 ;;
	--srcdir* | --sr*)
		srcdir=`echo ${optarg} | sed -e 's,/$,,'` ;;
	--prefix* | --pr*)
		prefix=`echo ${optarg} | sed -e 's,/$,,'` ;;
	--exec-prefix* | --ex*)
		exec_prefix=`echo ${optarg} | sed -e 's,/$,,'` ;;
	--bindir* | --bi*)
		bindir=`echo ${optarg} | sed -e 's,/$,,'` ;;
	--datadir* | --da*)
		datadir=`echo ${optarg} | sed -e 's,/$,,'` ;;
	--infodir* | --in*)
		infodir=`echo ${optarg} | sed -e 's,/$,,'` ;;
	--mandir* | --ma*)
		mandir=`echo ${optarg} | sed -e 's,/$,,'` ;;
	--sysconfdir* | --sy*)
		sysconfdir=`echo ${optarg} | sed -e 's,/$,,'` ;;
	--no-create | --no-c*)
		no_create=yes ;;

	CC=*)       CC=${optarg} ;;
	CXX=*)      CXX=${optarg} ;;
	CPPFLAGS=*) CPPFLAGS=${optarg} ;;
	CFLAGS=*)   CFLAGS=${optarg} ;;
	CXXFLAGS=*) CXXFLAGS=${optarg} ;;
	LDFLAGS=*)  LDFLAGS=${optarg} ;;
	AR=*)       AR=${optarg} ;;
	RANLIB=*)   RANLIB=${optarg} ;;
	INSTALL=*)  INSTALL=${optarg} ;;
	LDCONFIG=*) LDCONFIG=${optarg} ;;

        --with-oldsdl) OLDSDL="yes" ;;
	--with-sdl-iconv=*) WCHAR_ENCODING=${optarg} ;;
	--with-sdl-iconv) ;;
	--with-iconv) FORCE_ICONV="yes" ;;
	--with-iconv=*) FORCE_ICONV="yes"; WCHAR_ENCODING=${optarg} ;;
	--with-iconv) FORCE_ICONV="yes" ;;
	--enable-qvga | --enable-qvga=yes | --enable-size=qvga) SIZE="QVGA" ;;
	--enable-vga | --enable-vga=yes | --enable-size=vga) SIZE="VGA" ;;
	
	--build=* | --enable-* | --with-* | --*dir=* | *=*) ;;
	*)
		echo "configure: Unrecognized option: \"${option}\"; use --help for usage." 1>&2
		exit 1 ;;
	esac
done

[ "$SIZE" = "QVGA" ] && CFLAGS="$CFLAGS -DQVGA"
[ "$SIZE" = "VGA" ] && CFLAGS="$CFLAGS -DVGA"

# old SDL is meant for the target machine 
# and independant of the systems SDL-Version
[ "$OLDSDL" = "yes" ] && CFLAGS="$CFLAGS -DOLD_SDL=1"
[ "$FORCE_ICONV" = "yes" ] && CFLAGS="$CFLAGS -DFORCE_ICONV=1"
[ -n "$WCHAR_ENCODING" ] \
  && CFLAGS="$CFLAGS -DWCHAR_ENCODING=\\\"$WCHAR_ENCODING\\\""

# Check for SDL version
sdlversion=`sdl-config --version`
case ${sdlversion} in
  "")    echo "SDL develop environment not found" 1>&2
         echo "I need version 1.2.x (x >= 6)" 1>&2 
         exit 1 ;;
  1.2.*) sdlrevision=`echo ${sdlversion} | sed -e 's,.\..\.,,'`
         if test ${sdlrevision} -ge 6
         then
           echo "SDL ${sdlversion} found - okay" 1>&2 
	 else
	   echo "SDL ${sdlversion} found - not everything supported" 1>&2
	 fi ;;
  *)     echo "SDL ${sdlversion} found - but I need 1.2.x (x >= 6)" 1>&2
         exit 1 ;;
esac

SDLCFLAGS=`sdl-config --cflags`
SDLLDFLAGS=`sdl-config --libs`

# system specific stuff
SYSTEM=`uname -s`
case ${SYSTEM} in
  Linux | linux)     SYSTEM="gnu-linux" ;;
  FreeBSD | freebsd) SYSTEM="freebsd"
                     LDFLAGS="${LDFLAGS} -lpthread -Wl,-rpath,/usr/local/lib" 
                     ;;
esac

ARCH=`uname -m`
case ${ARCH} in
  i?86) ARCH="x86" ;;
esac

# Find the source files, if location was not specified.
srcdirtext=
if [ x"${srcdir}" = x ] ; then
	srcdirtext="or . or .." ; srcdir=.
	if [ ! -r ${srcdir}/${srctrigger} ] ; then srcdir=.. ; fi
	if [ ! -r ${srcdir}/${srctrigger} ] ; then
		## the sed command below emulates the dirname command
		srcdir=`echo ${invocation_name} | sed -e 's,[^/]*$,,;s,/$,,;s,^$,.,'`
	fi
fi

if [ ! -r ${srcdir}/${srctrigger} ] ; then
	exec 1>&2
	echo
	echo "configure: Can't find sources in ${srcdir} ${srcdirtext}"
	echo "configure: (At least ${srctrigger} is missing)."
	exit 1
fi

# Set srcdir to . if that's what it is.
if [ "`pwd`" = "`cd ${srcdir} ; pwd`" ] ; then srcdir=. ; fi

# checking whether we are using GNU C.
if [ x"${CC}" = x ] ; then		# Let the user override the test.
	if [ -x /bin/gcc ] ||
	   [ -x /usr/bin/gcc ] ||
	   [ -x /usr/local/bin/gcc ] ; then
		CC="gcc"
	else
		CC="cc"
	fi
fi

# checking whether we are using GNU C++.
if [ x"${CXX}" = x ] ; then		# Let the user override the test.
	if [ -x /bin/g++ ] ||
	   [ -x /usr/bin/g++ ] ||
	   [ -x /usr/local/bin/g++ ] ; then
		CXX="g++"
	else
		CXX="c++"
	fi
fi

echo
if [ x${no_create} = x ] ; then
	echo "creating config.status"
	rm -f config.status
	cat > config.status << EOF
#!/bin/sh
# This file was generated automatically by configure. Do not edit.
# Run this file to recreate the current configuration.
#
# This script is free software; you have unlimited permission
# to copy, distribute and modify it.

exec /bin/sh ${invocation_name} ${args} --no-create
EOF
	chmod +x config.status
fi

echo "creating Makefile"
echo "VERSION = ${VERSION}"
echo "SUBVERSION = ${SUBVERSION}"
echo "REVISION = ${REVISION}"
echo "VARIANT = ${VARIANT}"
echo "LIBNAME = ${LIBNAME}"
echo "SONAME = ${SONAME}"
echo "srcdir (VPATH) = ${srcdir}"
echo "prefix = ${prefix}"
echo "exec_prefix = ${exec_prefix}"
echo "bindir = ${bindir}"
echo "libdir = ${libdir}"
echo "includedir = ${includedir}"
echo "datadir = ${datadir}"
echo "infodir = ${infodir}"
echo "mandir = ${mandir}"
echo "sysconfdir = ${sysconfdir}"
echo "CC = ${CC}"
echo "CXX = ${CXX}"
echo "CPPFLAGS = ${CPPFLAGS}"
echo "CFLAGS = ${CFLAGS}"
echo "CXXFLAGS = ${CXXFLAGS}"
echo "LDFLAGS = ${LDFLAGS}"
echo "SDLCFLAGS = ${SDLCFLAGS}"
echo "SDLLDFLAGS = ${SDLLDFLAGS}"
echo "AR = ${AR}"
echo "RANLIB = ${RANLIB}"
echo "INSTALL = ${INSTALL}"
echo "LDCONFIG = ${LDCONFIG}"
echo "SYSTEM = ${SYSTEM}"
echo "ARCH = ${ARCH}"

rm -f version.h
cat > version.h << EOF
/* version information */
/* This file was generated automatically by configure. Do not edit. */

#ifndef AVTVERSION
#  define AVTVERSION "${VERSION}.${SUBVERSION}.${REVISION}${VARIANT}"
#endif
EOF

rm -f Makefile
cat > Makefile << EOF
# Makefile for AKFAvatar
# Copyright (C) 2007 Andreas K. Foerster
# Copyright (C) 2003, 2004, 2005, 2006, 2007 Antonio Diaz Diaz.
# This file was generated automatically by configure. Do not edit.
#
# This Makefile is free software; you have unlimited permission
# to copy, distribute and modify it.

VERSION = ${VERSION}
SUBVERSION = ${SUBVERSION}
REVISION = ${REVISION}
VARIANT = ${VARIANT}
LIBNAME = ${LIBNAME}
SONAME = ${SONAME}
pkgname = ${pkgname}
pkgversion = ${pkgversion}
srcdir = ${srcdir}
VPATH = ${srcdir}
prefix = ${prefix}
exec_prefix = ${exec_prefix}
bindir = ${bindir}
libdir = ${libdir}
includedir = ${includedir}
datadir = ${datadir}
infodir = ${infodir}
mandir = ${mandir}
sysconfdir = ${sysconfdir}
CC = ${CC}
CXX = ${CXX}
CPPFLAGS = ${CPPFLAGS}
CFLAGS = ${CFLAGS}
CXXFLAGS = ${CXXFLAGS}
LDFLAGS = ${LDFLAGS}
AR = ${AR}
RANLIB = ${RANLIB}
INSTALL = ${INSTALL}
LDCONFIG = ${LDCONFIG}
SDLCFLAGS = ${SDLCFLAGS}
SDLLDFLAGS = ${SDLLDFLAGS}
SYSTEM = ${SYSTEM}
ARCH = ${ARCH}

EOF
cat ${srcdir}/Makefile.in >> Makefile

rm -f ${srcdir}/doc/version.texi
cat > ${srcdir}/doc/version.texi <<EOF
@c This file was generated automatically by configure. Do not edit.

@set VERSION ${VERSION}.${SUBVERSION}.${REVISION}${VARIANT}
@set UPDATED $(date +%Y-%m-%d)

EOF

if [ -d ${srcdir}/mingw32 ]
then
  {
    echo "VERSION = ${VERSION}"
    echo "SUBVERSION = ${SUBVERSION}"
    echo "REVISION = ${REVISION}"
    echo "VARIANT = ${VARIANT}"
  } > ${srcdir}/mingw32/version
fi

echo
echo "OK. Now you can run make."
