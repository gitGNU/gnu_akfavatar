Module "akfavatar-canvas"

Notes:
- Coordinates start with 1, 1 in the upper left corner.
- The pen size, color and position are set for each canvas.


canvas.new ([width, height])
    Creates a new canvas.
    When width and height are not given it uses the whole window/screen.
    A thin black pen is chosen and the position is centered.

    Retuns the canvas, the width and the height (ie. three values).

    Use it either like this:
      local c, width, height = canvas.new()

    Or use it like that:
      local width, height = 100, 100
      local c = canvas.new(width, height)


c:show()
    Shows the canvas as image after drawing.

    Hint: You can show intermediate images, continue drawing, wait a while
    and then show the next step and so on.  This makes a nice animation.
    But don't make the steps too small, or it will be painfull on slow devices.


c:width()
    Returns the width of the canvas c.


c:height()
    Returns the height of the canvas c.


c:color(colorname)
    Sets the drawing color.
    The color can be either a defined color name,
    or a hexadecimal representation, like for example "#FFFF00".


c:rgb(red, green, blue)
    Sets the drawing color from RGB values.
    The values must be in the range from 0 to 255 inclusive.
    This method is faster than using c:color().


c:thickness(value)
    Sets the thickness of the pen.  The value 1 is the thinnest.


c:clear()
    Clears the canvas c, ie. fills the canvas with the background color.
    The pen position is not changed.


c:putpixel([x, y])
    Puts a pixel at the given coordinates or at the current pen position.
    The pen position is not changed.


c:putdot([x, y])
    Puts a dot at the given coordinates or at the current pen position.
    If the pen thin, it's the same as c:putpixel.
    The pen position is not changed.


c:pen_position()
    Returns the x and y position of the pen (ie. returns two values).


c:center()
    Sets the pen to the center of the canvas.


c:moveto(x, y)
    Move the pen to x, y without drawing.


c:moverel(x, y)
    Move the pen without drawing relative to its current position.
    A positive x value moves it to the right,
    a negative x value moves it to the left.
    A positive y value moves it down,
    a negative y value moves it up.


c:lineto(x, y)
    Draws a line from the current pen position to these absolute coordinates.
    The pen is moved to the new coordinates.


c:linerel(x, y)
    Draws a line relative to its current pen position.
    A positive x value draws to the right,
    a negative x value draws to the left.
    A positive y value draws down,
    a negative y value draws up.
    The pen is moved to the new position.


c:line(x1, y1, x2, y2)
    Draws a line from x1, y1 to x2, y2.
    The pen is set to x2, y2.


c:bar(x1, y1, x2, y2)
    Draws a solid bar with x1, y2 as the upper left corner
    and x2, y2 as the lower right corner.
    The pen position is not changed.


c:rectangle(x1, y1, x2, y2)
    Draws rectangle with x1, y2 as the upper left corner
    and x2, y2 as the lower right corner.
    The pen position is not changed.


c:circle(x, y, radius [,startangle, endangle])
    Draws a circle with x, y as the center with the given radius.
    The pen is put to the center of the circle (ie. to the given x, y)

    You can draw a part of the circle by giving the startangle and endangle
    in degree.  The circle is drawn clockwise.


c:text(text [, x, y])
    Prints a text aligned to the given position or the pen position.

    By default the text is centered to the position.  But you can change this
    with c:textalign().

    The encoding is used from the AKFAvatar settings.  However no other of
    those settings are taken into account.  The color is the drawing color for
    the canvas.  There is currently no easy way to make boldface, underlined or
    inverted text.

    You can use all printable characters, but control characters are not
    supported, even not a newline.

    The pen position is not changed.


c:textalign([horizontal] [, vertical])
    Sets the textalignment for c:text().

    The horizontal alignment can be one of "left", "center" or "right".  The
    default is "center".

    The vertical alignment can be one of "top", "center" or "bottom".  The
    default is "center".

    The alignment means, where the given point is, eg. when you tell it to be
    "left"-aligned, the fixed point is on the left, but the text runs to the
    right.


c:font_size()
    Returns the width and the hight of the font, ie. one character.
    It is a fixed-width font, each character has the same width.

