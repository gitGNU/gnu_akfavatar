Übersetzungen für Lua-AKFAvatar Skripte schreiben

Um Übersetzungen für Lua-AKFAvatar Skripte zu schreiben, muss man erstmal die
Variable avt.translations definieren.  Es handelt sich dabei um eine
verschachtelte Tabelle.  Nun, die ist schwer zu beschreiben, aber das Beispiel-
Skript weiter unten sollte es verständlich machen.

Die zu verwendende Sprache wird durch die Variable avt.language festgelegt.
Diese Variable sollte von Lua-AKFAvatar automatisch initialisiert worden sein,
sie kann aber auch im Skript geändert werden.  Sie enthält eine Sprach-Kennung
mit zwei Buchstaben gemäß ISO 639-1.

Die Funktion avt.translate(Text) gibt dann den übersetzten Text zurück.
Falls keine Übersetzung zur Verfügung steht, wird der Text unverändert zurück
gegeben.

Es ist ratsam, einen lokalen Alias namens L für avt.translate anzulegen:
    local L = avt.translate
Dann kann man einfach eine String-Konstante damit einleiten: L"Hello"


BEISPIEL:
--------------------------------------------------------------------------------
local avt = require "lua-akfavatar"

avt.encoding("UTF-8")

avt.translations = {

  ["Hello world!"] = {
    ru="Здравствуй мир!",
    el="Καλημέρα κόσμε!",
    es="¡Hola mundo!",
    fr="Bonjour le monde!",
    de="Hallo Welt!",
    sv="Hej Världen!",
    },

  ["That's live!"] = {
    de="So ist das Leben!",
    fr="C'est la vie!" },
}

local L = avt.translate

-- avt.language = "de"

avt.start()
avt.avatar_image("default")
avt.tell(L"Hello world!", "\n", L"That's live!");
avt.wait_button ()
--------------------------------------------------------------------------------

TIPPS:

Obwohl es nicht notwendig ist, sollte man Englisch als Ausgangssprache
verwenden.

Wenn man Text mit Variablen dazwischen hat, ist es kein guter Ansatz, den Text
in Teile aufzuteilen. Es ist besser einen Format-String für string.format() zu
definieren.

Der übersetzbare String muss exakt übereinstimmen. Bitte daran denken, dass
wenn man die Strings im Programm abändert, man auch die Übersetzungstabelle
anpassen muss!

Der String kann auch ein Dateiname sein, für eine Textdatei oder eine
Sprachaufnahme.

Übrigens, diese Implementierung wurde von GNU gettext inspiriert.
